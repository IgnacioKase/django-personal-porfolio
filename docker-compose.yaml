version: "3"

services:
  
  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "8000:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.django_app

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
  
  db_postgres:
    image: postgres:11.5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
  
  django_app:
    build: .
    #image: django:1.0
    volumes:
      - ./config:/opt/portfolio/config
      - ./portfolio:/opt/portfolio
    depends_on:
      - db_postgres
    restart: always
    
  nginx:
    image: nginx:1.13
    # ports:
    #   - 8000:80
    expose: 
      - 80
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - static:/portfolio/static
    depends_on:
      - django_app
    restart: always

volumes:
  #.:
  postgres_data:
  static:
  certs:
  html:
  vhostd:
